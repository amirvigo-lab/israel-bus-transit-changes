<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ניתוח נתוני תחבורה ציבורית</title>
    <!-- Importing Tailwind CSS for styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Importing Chart.js for charts -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Importing Chart.js annotation plugin -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/chartjs-plugin-annotation/2.2.1/chartjs-plugin-annotation.min.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Assistant:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Assistant', sans-serif;
        }
        /* Style for active tab */
        .tab-active {
            border-color: #3b82f6; /* blue-500 */
            background-color: #eff6ff; /* blue-50 */
            color: #1e40af; /* blue-800 */
        }
    </style>
</head>
<body class="bg-gray-100 text-gray-800">

    <div class="container mx-auto p-4 sm:p-6 md:p-8">
        
        <header class="mb-8">
            <h1 class="text-3xl md:text-4xl font-bold text-blue-800">מערכת ניתוח נתוני תחבורה ציבורית</h1>
            <p class="text-lg text-gray-600">ניתוח קבוצתי לפי מחוז</p>
        </header>

        <!-- Navigation Tabs for Districts -->
        <nav class="mb-4">
             <h3 class="text-sm font-bold text-gray-500 uppercase tracking-wide mb-2">1. בחר מחוז</h3>
            <div id="district-tabs-container" class="flex border-b border-gray-300 overflow-x-auto">
                <!-- District tabs will be dynamically inserted here -->
            </div>
        </nav>

        <!-- Navigation Tabs for Groups -->
        <nav class="mb-6">
            <h3 class="text-sm font-bold text-gray-500 uppercase tracking-wide mb-2">2. בחר קבוצה</h3>
            <div id="tabs-container" class="flex border-b border-gray-300 overflow-x-auto">
                <!-- Group tabs will be dynamically inserted here -->
            </div>
        </nav>

        <!-- Main Content Card -->
        <main id="main-content" class="bg-white p-6 rounded-lg shadow-lg hidden">

            <!-- Group Information Section -->
            <div class="mb-6 pb-6 border-b border-gray-200">
                <h2 class="text-2xl font-bold text-gray-800 ml-4" id="groupTitle"></h2>
            </div>

            <!-- Change Info Section -->
            <div id="changeInfoSection" class="mb-8 p-4 bg-amber-50 border-r-4 border-amber-400 rounded-r-lg hidden">
                <h3 class="text-xl font-bold text-amber-800 mb-2">שינויים מרכזיים בקבוצה</h3>
                <p class="text-gray-700"><strong class="font-semibold">תאריך השינוי:</strong> <span id="changeDate"></span></p>
                <p class="text-gray-700 mt-1"><strong class="font-semibold">תיאור השינוי:</strong> <span id="changeDescription"></span></p>
            </div>

            <!-- Chart Section -->
            <div class="mt-8">
                <h3 class="text-xl font-semibold mb-4">ממוצע תיקופים שבועי</h3>
                <div class="bg-gray-50 p-4 rounded-lg">
                   <div class="flex justify-end space-x-2 space-x-reverse mb-2">
                        <button id="selectAllBtn" class="px-3 py-1 bg-blue-500 text-white rounded-md text-sm hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">בחר הכל</button>
                        <button id="clearAllBtn" class="px-3 py-1 bg-gray-500 text-white rounded-md text-sm hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500">נקה הכל</button>
                   </div>
                   <div class="relative h-96">
                       <canvas id="ridershipChart"></canvas>
                   </div>
                   <div class="mt-4 pt-4 border-t border-gray-200 flex justify-between items-center font-bold">
                       <span class="text-gray-700">היקף השינוי (Q1 2018 - Q2 2025):</span>
                       <span id="ridershipChange" class="text-lg"></span>
                   </div>
                </div>
            </div>

            <!-- Kilometer Data Table Section -->
            <div class="mt-8">
                <h3 class="text-xl font-semibold mb-4">סיכום נתוני קילומטראז' (ק"מ שבועי)</h3>
                <div class="overflow-x-auto">
                    <table class="min-w-full bg-white border border-gray-200 rounded-lg">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="py-3 px-4 border-b text-right font-bold text-gray-600">שנה</th>
                                <th class="py-3 px-4 border-b text-right font-bold text-gray-600">רבעון</th>
                                <th class="py-3 px-4 border-b text-right font-bold text-gray-600">סה"כ ק"מ שבועי בקבוצה</th>
                            </tr>
                        </thead>
                        <tbody id="kmDataTableBody">
                            <!-- Data rows will be inserted here by JavaScript -->
                        </tbody>
                        <!-- Footer for summary will be inserted here -->
                    </table>
                </div>
            </div>
            
            <!-- Ratio Summary -->
            <div id="ratioSummarySection" class="mt-8 hidden">
                <div class="bg-indigo-50 p-4 rounded-lg text-center">
                    <p id="ratioSummaryText" class="text-lg font-semibold text-indigo-800"></p>
                </div>
            </div>

        </main>
        
    </div>

    <script>
        // --- Raw Data Input Section ---
        const rawData = [
            // --- Group: Akko Pnimi ---
            { "מחוז": "גולן, גליל ועמקים", "שם קבוצה": "עכו פנימי", "מקט": 12002, "קו": "קו 2 (12002)", "18/Q1": 16898, "18/Q2": 19917, "18/Q4": 20614, "19/Q1": 21905, "19/Q2": 21562, "19/Q4": 22375, "20/Q1": 21190, "20/Q2": 11379, "20/Q4": 10554, "21/Q1": 8862, "21/Q2": 15324, "21/Q4": 16923, "22/Q1": 15703, "22/Q2": 18021, "22/Q4": 19954, "23/Q1": 19312, "23/Q2": 20265, "23/Q4": 7387, "24/Q1": 15757, "24/Q2": 14718, "Q4/24": 13428, "Q1/25": 16777, "Q2/25": 16563, "קמ שבועי Q4 2018": "8,801", "קמ  שבועי Q2 2025": "10,574" },
            { "מחוז": "גולן, גליל ועמקים", "שם קבוצה": "עכו פנימי", "מקט": 77003, "קו": "קו 3 (77003)", "18/Q1": 6455, "18/Q2": 6968, "18/Q4": 6946, "19/Q1": 6957, "19/Q2": 6850, "19/Q4": 7708, "20/Q1": 7102, "20/Q2": 2896, "20/Q4": 2994, "21/Q1": 2388, "21/Q2": 4199, "21/Q4": 5207, "22/Q1": 4561, "22/Q2": 5352, "22/Q4": 6259, "23/Q1": 6269, "23/Q2": 6319, "23/Q4": 3417, "24/Q1": 3656, "24/Q2": 4095, "Q4/24": 3201, "Q1/25": 4432, "Q2/25": 4823, "קמ שבועי Q4 2018": "6,432", "קמ  שבועי Q2 2025": "6,088" },
            { "מחוז": "גולן, גליל ועמקים", "שם קבוצה": "עכו פנימי", "מקט": 91004, "קו": "קו 4 (91004)", "18/Q1": "", "18/Q2": "", "18/Q4": "", "19/Q1": "", "19/Q2": "", "19/Q4": 2710, "20/Q1": 2817, "20/Q2": 1431, "20/Q4": 1373, "21/Q1": 1266, "21/Q2": 2049, "21/Q4": 2591, "22/Q1": 2339, "22/Q2": 2862, "22/Q4": 3557, "23/Q1": 3931, "23/Q2": 4318, "23/Q4": 4255, "24/Q1": 4483, "24/Q2": 4616, "Q4/24": 3998, "Q1/25": 5416, "Q2/25": 6013, "קמ שבועי Q4 2018": 0, "קמ  שבועי Q2 2025": "6,236" },
            { "מחוז": "גולן, גליל ועמקים", "שם קבוצה": "עכו פנימי", "מקט": 59005, "קו": "קו 5 (59005)", "18/Q1": "", "18/Q2": "", "18/Q4": "", "19/Q1": "", "19/Q2": "", "19/Q4": "", "20/Q1": "", "20/Q2": "", "20/Q4": "", "21/Q1": "", "21/Q2": "", "21/Q4": "", "22/Q1": "", "22/Q2": "", "22/Q4": "", "23/Q1": "", "23/Q2": "", "23/Q4": 921, "24/Q1": 1080, "24/Q2": 1487, "Q4/24": 1113, "Q1/25": 1456, "Q2/25": 1612, "קמ שבועי Q4 2018": 0, "קמ  שבועי Q2 2025": "3,101" },
            { "מחוז": "מטרופולין חיפה", "שם קבוצה": "חריש פנימי", "מק\"ט": 35022, "קו": "קו 22 (35022)", "18/Q1": "", "18/Q2": "", "18/Q4": "", "19/Q1": "", "19/Q2": "", "19/Q4": "", "20/Q1": "", "20/Q2": "", "20/Q4": "", "21/Q1": "", "21/Q2": "", "21/Q4": 811, "22/Q1": 1471, "22/Q2": 2380, "22/Q4": 3557, "23/Q1": 3416, "23/Q2": 3492, "23/Q4": 1767, "24/Q1": 1985, "24/Q2": 2233, "Q4/24": 2748, "Q1/25": 3464, "Q2/25": 3767, "ק\"מ שבועי Q4 2018": 0, "ק\"מ  שבועי Q2 2025": "4,402" },
            // --- Group: Rosh Haayin Pnimi ---
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 71001, "קו": "קו 1 (71001)", "18/Q1": 1955, "18/Q2": 2119, "18/Q4": 2097, "19/Q1": 2024, "19/Q2": 2065, "19/Q4": 2090, "20/Q1": 2007, "20/Q2": 1244, "20/Q4": "", "21/Q1": "", "21/Q2": "", "21/Q4": "", "22/Q1": "", "22/Q2": "", "22/Q4": "", "23/Q1": "", "23/Q2": "", "23/Q4": "", "24/Q1": "", "24/Q2": "", "Q4/24": "", "Q1/25": "", "Q2/25": "", "ק\"מ שבועי Q4 2018": "2,062", "ק\"מ  שבועי Q2 2025": 0 },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 59002, "קו": "קו 2 (59002)", "18/Q1": 1251, "18/Q2": 1357, "18/Q4": 1342, "19/Q1": 1295, "19/Q2": 1322, "19/Q4": 1338, "20/Q1": 1285, "20/Q2": 796, "20/Q4": "", "21/Q1": "", "21/Q2": "", "21/Q4": "", "22/Q1": "", "22/Q2": "", "22/Q4": "", "23/Q1": "", "23/Q2": "", "23/Q4": "", "24/Q1": "", "24/Q2": "", "Q4/24": 163, "Q1/25": 140, "Q2/25": 105, "ק\"מ שבועי Q4 2018": "2,804", "ק\"מ  שבועי Q2 2025": "1,408" },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 50008, "קו": "קו 8 (50008)", "18/Q1": 1978, "18/Q2": 2144, "18/Q4": 2122, "19/Q1": 2048, "19/Q2": 2089, "19/Q4": 2115, "20/Q1": 2031, "20/Q2": 1259, "20/Q4": "", "21/Q1": "", "21/Q2": "", "21/Q4": "", "22/Q1": "", "22/Q2": "", "22/Q4": "", "23/Q1": "", "23/Q2": "", "23/Q4": "", "24/Q1": "", "24/Q2": "", "Q4/24": "", "Q1/25": "", "Q2/25": "", "ק\"מ שבועי Q4 2018": "2,771", "ק\"מ  שבועי Q2 2025": 0 },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 46009, "קו": "קו 9 (46009)", "18/Q1": 5947, "18/Q2": 6290, "18/Q4": 6644, "19/Q1": 6872, "19/Q2": 6385, "19/Q4": 8143, "20/Q1": 8308, "20/Q2": 4361, "20/Q4": 2953, "21/Q1": 2154, "21/Q2": 5303, "21/Q4": 5867, "22/Q1": 4412, "22/Q2": 4538, "22/Q4": 4969, "23/Q1": 5286, "23/Q2": 5104, "23/Q4": 4783, "24/Q1": 4980, "24/Q2": 4744, "Q4/24": 6448, "Q1/25": 6324, "Q2/25": 6038, "ק\"מ שבועי Q4 2018": "6,462", "ק\"מ  שבועי Q2 2025": "6,712" },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 66011, "קו": "קו 11 (66011)", "18/Q1": 2446, "18/Q2": 2542, "18/Q4": 2628, "19/Q1": 2600, "19/Q2": 2605, "19/Q4": 2791, "20/Q1": 2717, "20/Q2": 1555, "20/Q4": 1015, "21/Q1": 819, "21/Q2": 2044, "21/Q4": 2298, "22/Q1": 1223, "22/Q2": 1489, "22/Q4": 1814, "23/Q1": 2060, "23/Q2": 1938, "23/Q4": 1739, "24/Q1": 2004, "24/Q2": 1769, "Q4/24": 2124, "Q1/25": 2002, "Q2/25": 1692, "ק\"מ שבועי Q4 2018": "3,323", "ק\"מ  שבועי Q2 2025": "3,498" },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 50012, "קו": "קו 12 (50012)", "18/Q1": 1196, "18/Q2": 1261, "18/Q4": 1405, "19/Q1": 1422, "19/Q2": 1320, "19/Q4": 1389, "20/Q1": 1433, "20/Q2": 766, "20/Q4": 711, "21/Q1": 630, "21/Q2": 1101, "21/Q4": 1135, "22/Q1": 822, "22/Q2": 869, "22/Q4": 838, "23/Q1": 857, "23/Q2": 933, "23/Q4": 902, "24/Q1": 1020, "24/Q2": 840, "Q4/24": 1123, "Q1/25": 1113, "Q2/25": 1046, "ק\"מ שבועי Q4 2018": "3,412", "ק\"מ  שבועי Q2 2025": "3,513" },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 57013, "קו": "קו 13 (57013)", "18/Q1": 2243, "18/Q2": 2516, "18/Q4": 2592, "19/Q1": 2504, "19/Q2": 2603, "19/Q4": 2889, "20/Q1": 2864, "20/Q2": 1981, "20/Q4": 1557, "21/Q1": 1367, "21/Q2": 2194, "21/Q4": 2345, "22/Q1": 1970, "22/Q2": 2226, "22/Q4": 2092, "23/Q1": 2063, "23/Q2": 2093, "23/Q4": 1736, "24/Q1": 1865, "24/Q2": 1714, "Q4/24": 2249, "Q1/25": 2188, "Q2/25": 2010, "ק\"מ שבועי Q4 2018": "3,885", "ק\"מ  שבועי Q2 2025": "4,028" },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 50014, "קו": "קו 14 (50014)", "18/Q1": 1010, "18/Q2": 1414, "18/Q4": 1243, "19/Q1": 1333, "19/Q2": 1454, "19/Q4": 1461, "20/Q1": 1404, "20/Q2": 964, "20/Q4": 872, "21/Q1": 831, "21/Q2": 1344, "21/Q4": 1488, "22/Q1": 1133, "22/Q2": 1180, "22/Q4": 1129, "23/Q1": 998, "23/Q2": 1083, "23/Q4": 1101, "24/Q1": 1237, "24/Q2": 1507, "Q4/24": 1466, "Q1/25": 1569, "Q2/25": 1408, "ק\"מ שבועי Q4 2018": "4,929", "ק\"מ  שבועי Q2 2025": "5,381" },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 42018, "קו": "קו 18 (42018)", "18/Q1": 3012, "18/Q2": 3266, "18/Q4": 3232, "19/Q1": 3119, "19/Q2": 3182, "19/Q4": 3221, "20/Q1": 3094, "20/Q2": 1917, "20/Q4": "", "21/Q1": "", "21/Q2": "", "21/Q4": "", "22/Q1": "", "22/Q2": "", "22/Q4": "", "23/Q1": "", "23/Q2": "", "23/Q4": "", "24/Q1": "", "24/Q2": "", "Q4/24": "", "Q1/25": "", "Q2/25": "", "ק\"מ שבועי Q4 2018": "2,256", "ק\"מ  שבועי Q2 2025": 0 },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 33028, "קו": "קו 28 (33028)", "18/Q1": 863, "18/Q2": 936, "18/Q4": 926, "19/Q1": 894, "19/Q2": 912, "19/Q4": 923, "20/Q1": 886, "20/Q2": 549, "20/Q4": "", "21/Q1": "", "21/Q2": "", "21/Q4": "", "22/Q1": "", "22/Q2": "", "22/Q4": "", "23/Q1": "", "23/Q2": "", "23/Q4": "", "24/Q1": "", "24/Q2": "", "Q4/24": "", "Q1/25": "", "Q2/25": "", "ק\"מ שבועי Q4 2018": "2,593", "ק\"מ  שבועי Q2 2025": 0 },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 25038, "קו": "קו 38 (25038)", "18/Q1": 921, "18/Q2": 823, "18/Q4": 742, "19/Q1": 788, "19/Q2": 855, "19/Q4": 763, "20/Q1": 704, "20/Q2": "", "20/Q4": 135, "21/Q1": 74, "21/Q2": 235, "21/Q4": 257, "22/Q1": 287, "22/Q2": 412, "22/Q4": 436, "23/Q1": 392, "23/Q2": 354, "23/Q4": 222, "24/Q1": 252, "24/Q2": 272, "Q4/24": 301, "Q1/25": 307, "Q2/25": 292, "ק\"מ שבועי Q4 2018": 596, "ק\"מ  שבועי Q2 2025": 623 },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 38048, "קו": "קו 48 (38048)", "18/Q1": 1350, "18/Q2": 1464, "18/Q4": 1449, "19/Q1": 1398, "19/Q2": 1427, "19/Q4": 1444, "20/Q1": 1387, "20/Q2": 859, "20/Q4": "", "21/Q1": "", "21/Q2": "", "21/Q4": "", "22/Q1": "", "22/Q2": "", "22/Q4": "", "23/Q1": "", "23/Q2": "", "23/Q4": "", "24/Q1": "", "24/Q2": "", "Q4/24": "", "Q1/25": "", "Q2/25": "", "ק\"מ שבועי Q4 2018": "1,637", "ק\"מ  שבועי Q2 2025": 0 },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 37071, "קו": "קו 71 (37071)", "18/Q1": "", "18/Q2": "", "18/Q4": "", "19/Q1": "", "19/Q2": "", "19/Q4": "", "20/Q1": "", "20/Q2": "", "20/Q4": 2191, "21/Q1": 1641, "21/Q2": 3895, "21/Q4": 3910, "22/Q1": 3972, "22/Q2": 5383, "22/Q4": 5971, "23/Q1": 6138, "23/Q2": 6221, "23/Q4": 5289, "24/Q1": 6532, "24/Q2": 7456, "Q4/24": 7751, "Q1/25": 7419, "Q2/25": 7550, "ק\"מ שבועי Q4 2018": 0, "ק\"מ  שבועי Q2 2025": "5,801" },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 43072, "קו": "קו 72 (43072)", "18/Q1": "", "18/Q2": "", "18/Q4": "", "19/Q1": "", "19/Q2": "", "19/Q4": "", "20/Q1": "", "20/Q2": "", "20/Q4": 479, "21/Q1": 341, "21/Q2": 804, "21/Q4": 746, "22/Q1": 830, "22/Q2": 1221, "22/Q4": 1217, "23/Q1": 1228, "23/Q2": 1284, "23/Q4": 791, "24/Q1": 984, "24/Q2": 1331, "Q4/24": 1189, "Q1/25": 1157, "Q2/25": 1234, "ק\"מ שבועי Q4 2018": 0, "ק\"מ  שבועי Q2 2025": "6,160" },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 54073, "קו": "קו 73 (54073)", "18/Q1": "", "18/Q2": "", "18/Q4": "", "19/Q1": "", "19/Q2": "", "19/Q4": "", "20/Q1": "", "20/Q2": "", "20/Q4": 837, "21/Q1": 644, "21/Q2": 1709, "21/Q4": 1797, "22/Q1": 1810, "22/Q2": 2427, "22/Q4": 2754, "23/Q1": 2877, "23/Q2": 2866, "23/Q4": 2496, "24/Q1": 2883, "24/Q2": 3317, "Q4/24": 3763, "Q1/25": 3817, "Q2/25": 3853, "ק\"מ שבועי Q4 2018": 0, "ק\"מ  שבועי Q2 2025": "6,377" },
            { "מחוז": "מרכז", "שם קבוצה": "ראש העין פנימי", "מקט": 44074, "קו": "קו 74 (44074)", "18/Q1": "", "18/Q2": "", "18/Q4": "", "19/Q1": "", "19/Q2": "", "19/Q4": "", "20/Q1": "", "20/Q2": "", "20/Q4": 946, "21/Q1": 703, "21/Q2": 1788, "21/Q4": 1645, "22/Q1": 1534, "22/Q2": 2316, "22/Q4": 2476, "23/Q1": 2702, "23/Q2": 2489, "23/Q4": 1988, "24/Q1": 2332, "24/Q2": 2250, "Q4/24": 2564, "Q1/25": 2482, "Q2/25": 2294, "ק\"מ שבועי Q4 2018": 0, "ק\"מ  שבועי Q2 2025": "6,557" }
        ];

        // --- Data Processing and Application State ---
        let transportData = [];
        let dataMap = {};
        let districtNames = [];
        let currentChart = null;
        
        const groupChangeInfo = [
            {
                "קיטלוג": "עפולה פנימי",
                "מחוז": "גולן גליל ועמקים",
                "תאריך פעימה": "18.08.2021",
                "הרבעון שבו בוצע עיקר השינוי": "Q4/21",
                "תיאור": "ביטול קווים מזינים 110,115,116,123, פתיחת קו 5, פיצול קו 10 לקווים 10,11, מעבר קווים 3,5 ו-11 ברחוב דובנוב בממשק עם תחנת הרכבת, תגבורי קווים"
            },
            {
                "קיטלוג": "עכו פנימי",
                "מחוז": "גולן גליל ועמקים",
                "תאריך פעימה": "23.08.2023",
                "הרבעון שבו בוצע עיקר השינוי": "Q4/23",
                "תיאור": "פתיחת קו 5, קיצור קו 4 כך שלא יגיע יותר לאזור התעשיה הדרומי (קו 251 ייתן את השירות במקומו), שינויי מסלול לקווים 3 ו-4 באזור העיר העתיקה והגדלת תדירות"
            }
        ];

        // --- Data Processing Function ---
        function processRawData(data) {
            return data.map(item => {
                const makat = item["מקט"] || item["מק\"ט"];
                const lineNumMatch = item["קו"].match(/(\d+)/);
                const lineNumber = lineNumMatch ? lineNumMatch[0] : item["קו"];
                const processed = {
                    id: `line-${makat}`,
                    lineNumber: lineNumber,
                    lineName: item["קו"],
                    district: item["מחוז"],
                    groupName: item["שם קבוצה"],
                    ridershipData: [],
                    kilometerData: []
                };
                for (const key in item) {
                    const ridershipMatch = key.match(/^(?:(\d{2})\/(Q\d)|(Q\d)\/(\d{2}))$/);
                    if (ridershipMatch) {
                        const passengers = Math.round(parseFloat(item[key]));
                        if (!isNaN(passengers) && passengers > 0) {
                            const year = ridershipMatch[1] || ridershipMatch[4];
                            const quarter = ridershipMatch[2] || ridershipMatch[3];
                            processed.ridershipData.push({ year: 2000 + parseInt(year), quarter: quarter, weeklyAvgPassengers: passengers });
                        }
                        continue;
                    }
                    const kmMatch = key.match(/ק(?:\"|\s)?מ\s*שבועי\s*(Q\d)\s*(\d{4})/);
                    if (kmMatch) {
                        const weeklyKm = parseInt(String(item[key]).replace(/,/g, ''));
                        if (!isNaN(weeklyKm)) {
                             const quarter = kmMatch[1];
                             const year = kmMatch[2];
                             processed.kilometerData.push({ year: parseInt(year), quarter: quarter, weeklyKm: weeklyKm });
                        }
                    }
                }
                processed.ridershipData.sort((a, b) => a.year - b.year || a.quarter.localeCompare(b.quarter));
                processed.kilometerData.sort((a, b) => a.year - b.year || a.quarter.localeCompare(b.quarter));
                return processed;
            });
        }

        // --- Main Render Function ---
        function renderGroupData(groupName) {
            const mainContent = document.getElementById('main-content');
            
            const groupData = transportData.filter(line => line.groupName === groupName);
            if (groupData.length === 0) {
                 mainContent.classList.add('hidden');
                 return;
            };
            mainContent.classList.remove('hidden');

            const groupInfo = groupData[0];
            document.getElementById('groupTitle').textContent = `ניתוח קבוצת ${groupInfo.groupName}`;
            
            const changeInfo = groupChangeInfo.find(info => info["קיטלוג"] === groupName);
            const changeInfoSection = document.getElementById('changeInfoSection');
            if (changeInfo) {
                document.getElementById('changeDate').textContent = changeInfo["תאריך פעימה"];
                document.getElementById('changeDescription').textContent = changeInfo["תיאור"];
                changeInfoSection.classList.remove('hidden');
            } else {
                changeInfoSection.classList.add('hidden');
            }
            
            populateKmTable(groupData);
            createStackedAreaChart(groupData, changeInfo ? changeInfo["הרבעון שבו בוצע עיקר השינוי"] : null);
            displayRidershipSummary(groupData);
            displayRatioSummary(groupData);
        }
        
        // --- UI Population Functions ---
        function populateKmTable(data) {
            const kmTableBody = document.getElementById('kmDataTableBody');
            kmTableBody.innerHTML = '';
            const kmSummary = {};
            data.forEach(line => {
                line.kilometerData.forEach(dp => {
                    const key = `${dp.year}-${dp.quarter}`;
                    kmSummary[key] = (kmSummary[key] || 0) + dp.weeklyKm;
                });
            });
            const sortedKeys = Object.keys(kmSummary).sort((a,b) => {
                 const [yA, qA] = a.split('-'); const [yB, qB] = b.split('-');
                 return yA - yB || qA.localeCompare(qB);
            });
            sortedKeys.forEach(key => {
                const [year, quarter] = key.split('-');
                const totalKm = kmSummary[key];
                const row = kmTableBody.insertRow();
                row.className = 'hover:bg-gray-50';
                row.innerHTML = `<td class="py-3 px-4 border-b">${year}</td><td class="py-3 px-4 border-b">${quarter}</td><td class="py-3 px-4 border-b font-semibold">${totalKm.toLocaleString()}</td>`;
            });
            
            const startValue = kmSummary['2018-Q4'];
            const endValue = kmSummary['2025-Q2'];
            const kmTable = kmTableBody.parentElement;
            const existingTfoot = kmTable.querySelector('tfoot');
            if (existingTfoot) existingTfoot.remove();

            if (startValue !== undefined && endValue !== undefined && startValue > 0) {
                const change = ((endValue - startValue) / startValue) * 100;
                const tfoot = kmTable.createTFoot();
                const footerRow = tfoot.insertRow();
                footerRow.className = 'bg-gray-100 font-bold';
                footerRow.innerHTML = `<td colspan="2" class="py-3 px-4 text-right">היקף השינוי (Q4 2018 - Q2 2025)</td><td class="py-3 px-4 text-left ${change >= 0 ? 'text-green-600' : 'text-red-600'}">${change.toFixed(1)}%</td>`;
            }
        }

        function displayRidershipSummary(data) {
            let startValueTotal = 0, endValueTotal = 0;
            data.forEach(line => {
                const startDP = line.ridershipData.find(dp => dp.year === 2018 && dp.quarter === 'Q1');
                if (startDP) startValueTotal += startDP.weeklyAvgPassengers;
                const endDP = line.ridershipData.find(dp => dp.year === 2025 && dp.quarter === 'Q2');
                if (endDP) endValueTotal += endDP.weeklyAvgPassengers;
            });

            const summaryEl = document.getElementById('ridershipChange');
            if (startValueTotal > 0) {
                const change = ((endValueTotal - startValueTotal) / startValueTotal) * 100;
                summaryEl.textContent = `${change.toFixed(1)}%`;
                summaryEl.className = `text-lg font-bold ${change >= 0 ? 'text-green-600' : 'text-red-600'}`;
            } else {
                 if (endValueTotal > 0) {
                    summaryEl.textContent = 'קו חדש';
                    summaryEl.className = 'text-lg font-bold text-blue-600';
                 } else {
                    summaryEl.textContent = 'N/A';
                    summaryEl.className = 'text-lg font-bold text-gray-500';
                 }
            }
        }

        function displayRatioSummary(data) {
            const ratioTextEl = document.getElementById('ratioSummaryText');
            const ratioSectionEl = document.getElementById('ratioSummarySection');

            // 1. Calculate Ridership Change (Q1 2018 -> Q2 2025)
            let startRidershipTotal = 0;
            let endRidershipTotal = 0;
            let hasStartRidership = false;
            data.forEach(line => {
                const startDP = line.ridershipData.find(dp => dp.year === 2018 && dp.quarter === 'Q1');
                if (startDP) {
                    startRidershipTotal += startDP.weeklyAvgPassengers;
                    hasStartRidership = true;
                }
                const endDP = line.ridershipData.find(dp => dp.year === 2025 && dp.quarter === 'Q2');
                if (endDP) endRidershipTotal += endDP.weeklyAvgPassengers;
            });
            
            if (!hasStartRidership && endRidershipTotal === 0) {
                ratioSectionEl.classList.add('hidden');
                return;
            }
            const ridershipChange = endRidershipTotal - startRidershipTotal;

            // 2. Calculate Kilometer Change (Q4 2018 -> Q2 2025)
            const kmSummary = {};
            data.forEach(line => {
                line.kilometerData.forEach(dp => {
                    const key = `${dp.year}-${dp.quarter}`;
                    kmSummary[key] = (kmSummary[key] || 0) + dp.weeklyKm;
                });
            });
            const startKmTotal = kmSummary['2018-Q4'];
            const endKmTotal = kmSummary['2025-Q2'];

            if (startKmTotal === undefined || endKmTotal === undefined) {
                ratioSectionEl.classList.add('hidden');
                return;
            }

            const kmChange = endKmTotal - startKmTotal;

            // 3. Calculate Ratio and build text
            ratioSectionEl.classList.remove('hidden');

            if (kmChange === 0) {
                ratioTextEl.textContent = "לא חל שינוי בהיקף הקילומטראז', ולכן לא ניתן לחשב יחס.";
                return;
            }

            const ratio = ridershipChange / kmChange;

            let kmText = kmChange > 0 ? "שהוסף" : "שנגרע";
            let passengerText = ridershipChange >= 0 ? "נוספו" : "נגרעו";
            let passengerValue = Math.abs(ratio).toFixed(1);

            ratioTextEl.textContent = `על כל ק"מ ${kmText} בתקופה הנבחנת, ${passengerText} ${passengerValue} נוסעים.`;
        }

        function createStackedAreaChart(data, changeQuarter) {
            const ctx = document.getElementById('ridershipChart').getContext('2d');
            if (currentChart) {
                currentChart.destroy();
            }

            const allLabelsSet = new Set();
            data.forEach(line => line.ridershipData.forEach(dp => allLabelsSet.add(`${dp.quarter}/${dp.year.toString().slice(-2)}`)));
            const sortedLabels = Array.from(allLabelsSet).sort((a, b) => {
                const [qA, yA] = a.split('/'); const [qB, yB] = b.split('/');
                return yA - yB || qA.localeCompare(qB);
            });

            const colors = [
                { border: 'rgb(59, 130, 246)', bg: 'rgba(59, 130, 246, 0.5)' }, { border: 'rgb(239, 68, 68)', bg: 'rgba(239, 68, 68, 0.5)' },
                { border: 'rgb(16, 185, 129)', bg: 'rgba(16, 185, 129, 0.5)' }, { border: 'rgb(249, 115, 22)', bg: 'rgba(249, 115, 22, 0.5)' },
                { border: 'rgb(139, 92, 246)', bg: 'rgba(139, 92, 246, 0.5)' }, { border: 'rgb(236, 72, 153)', bg: 'rgba(236, 72, 153, 0.5)' },
                { border: 'rgb(217, 119, 6)', bg: 'rgba(217, 119, 6, 0.5)' }, { border: 'rgb(74, 222, 128)', bg: 'rgba(74, 222, 128, 0.5)' },
                { border: 'rgb(99, 102, 241)', bg: 'rgba(99, 102, 241, 0.5)' }, { border: 'rgb(244, 63, 94)', bg: 'rgba(244, 63, 94, 0.5)' },
                { border: 'rgb(8, 145, 178)', bg: 'rgba(8, 145, 178, 0.5)' }, { border: 'rgb(219, 39, 119)', bg: 'rgba(219, 39, 119, 0.5)' },
                { border: 'rgb(107, 114, 128)', bg: 'rgba(107, 114, 128, 0.5)' }, { border: 'rgb(251, 146, 60)', bg: 'rgba(251, 146, 60, 0.5)' },
            ];
            const datasets = data.map((line, index) => {
                const dataMap = new Map(line.ridershipData.map(dp => [`${dp.quarter}/${dp.year.toString().slice(-2)}`, dp.weeklyAvgPassengers]));
                const chartData = sortedLabels.map(label => dataMap.get(label) || 0);
                return {
                    label: line.lineName, data: chartData, fill: true,
                    borderColor: colors[index % colors.length].border, backgroundColor: colors[index % colors.length].bg, tension: 0.1,
                };
            });
            
            const annotations = {};
            if (changeQuarter) {
                const changeIndex = sortedLabels.indexOf(changeQuarter);
                if (changeIndex !== -1) {
                    annotations.changeLine = {
                        type: 'line',
                        xMin: changeIndex,
                        xMax: changeIndex,
                        borderColor: 'rgb(239, 68, 68)', // red-500
                        borderWidth: 2,
                        borderDash: [6, 6],
                        label: {
                            content: 'שינוי מרכזי',
                            display: true,
                            position: 'start',
                            backgroundColor: 'rgba(239, 68, 68, 0.8)',
                            font: {
                                family: 'Assistant',
                                weight: 'bold'
                            }
                        }
                    };
                }
            }
            
            currentChart = new Chart(ctx, {
                type: 'line', data: { labels: sortedLabels, datasets: datasets },
                options: {
                    responsive: true, maintainAspectRatio: false, interaction: { mode: 'index', intersect: false },
                    scales: { y: { stacked: true, beginAtZero: true, ticks: { callback: value => value.toLocaleString() } } },
                    plugins: { 
                        tooltip: { callbacks: { label: context => `${context.dataset.label}: ${context.parsed.y.toLocaleString()}` } },
                        annotation: {
                            annotations: annotations
                        }
                    }
                }
            });
        }
        
        function setupGroupTabs(groupsForDistrict) {
            const tabsContainer = document.getElementById('tabs-container');
            tabsContainer.innerHTML = '';
            
            if (!groupsForDistrict) return;

            groupsForDistrict.forEach((name, index) => {
                const tab = document.createElement('button');
                tab.textContent = name;
                tab.className = `py-2 px-4 whitespace-nowrap font-semibold border-b-2 border-transparent text-gray-500 hover:text-blue-600 hover:border-blue-500 focus:outline-none`;
                
                if (index === 0) {
                    tab.classList.add('tab-active');
                }
                
                tab.addEventListener('click', () => {
                    document.querySelectorAll('#tabs-container button').forEach(t => t.classList.remove('tab-active'));
                    tab.classList.add('tab-active');
                    renderGroupData(name);
                });
                tabsContainer.appendChild(tab);
            });
        }

        function setupDistrictTabs() {
            const districtTabsContainer = document.getElementById('district-tabs-container');
            districtTabsContainer.innerHTML = ''; 

            districtNames.forEach((name, index) => {
                const tab = document.createElement('button');
                tab.textContent = name;
                tab.className = `py-2 px-4 whitespace-nowrap font-semibold border-b-2 border-transparent text-gray-500 hover:text-blue-600 hover:border-blue-500 focus:outline-none`;

                if (index === 0) {
                    tab.classList.add('tab-active');
                }

                tab.addEventListener('click', () => {
                    document.querySelectorAll('#district-tabs-container button').forEach(t => t.classList.remove('tab-active'));
                    tab.classList.add('tab-active');
                    
                    const groupsForDistrict = dataMap[name];
                    setupGroupTabs(groupsForDistrict);
                    
                    if (groupsForDistrict && groupsForDistrict.length > 0) {
                        renderGroupData(groupsForDistrict[0]);
                    } else {
                        renderGroupData(null); // Hide content if no groups
                    }
                });
                districtTabsContainer.appendChild(tab);
            });
        }


        // --- Initial Load ---
        document.addEventListener('DOMContentLoaded', () => {
            transportData = processRawData(rawData);
            
            transportData.forEach(item => {
                if (!dataMap[item.district]) {
                    dataMap[item.district] = [];
                }
                if (!dataMap[item.district].includes(item.groupName)) {
                    dataMap[item.district].push(item.groupName);
                }
            });
            
            districtNames = Object.keys(dataMap);

            if (districtNames.length > 0) {
                setupDistrictTabs();
                const firstDistrict = districtNames[0];
                const groupsForFirstDistrict = dataMap[firstDistrict];
                setupGroupTabs(groupsForFirstDistrict);
                
                if (groupsForFirstDistrict && groupsForFirstDistrict.length > 0) {
                    renderGroupData(groupsForFirstDistrict[0]);
                }
            }

            document.getElementById('selectAllBtn').addEventListener('click', () => {
                if (currentChart) {
                    currentChart.data.datasets.forEach((dataset, index) => {
                        currentChart.getDatasetMeta(index).hidden = false;
                    });
                    currentChart.update();
                }
            });

            document.getElementById('clearAllBtn').addEventListener('click', () => {
                if (currentChart) {
                    currentChart.data.datasets.forEach((dataset, index) => {
                        currentChart.getDatasetMeta(index).hidden = true;
                    });
                    currentChart.update();
                }
            });
        });
    </script>
</body>
</html>


